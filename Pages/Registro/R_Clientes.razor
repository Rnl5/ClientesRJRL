@page "/registroClientes"

@inject ClienteBLL ClienteBLL

<PageTitle>Registro de Clientes</PageTitle>

<h1>Registro de Clientes</h1>

<body>
    <EditForm model = "Clientes" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <div class ="container">
            <div class ="card-header">
                <h4>Registro</h4>
            </div>
            <div class="card-body">
                <label> Cliente ID:</label>
                <div class="input-group mb-3">
                    <InputNumber @bind-Value="cliente.ClienteId" class="form-control" aria-describedby="BotonBuscarId" />
                    <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="BotonBuscarId"><i class="oi oi-magnifying-glass" /> </button>
                </div>

                <div>
                    <label>Nombre del Cliente:</label>
                    <div class="input-group mb-3">
                       <InputText @bind-Value="cliente.Nombres" class="form-control" aria-describedby="NombreCliente" />
                        <ValidationMessage For="@(() =>cliente.Nombres)" />
                    </div>
                </div>

                <div>
                    <label>Telefono del cliente:</label>
                    <div class="input-group mb-3">
                        <InputText @bind-Value="cliente.Telefono" class="form-control" aria-describedby="TelefonoCliente"></InputText>
                        <ValidationMessage For="@(() =>cliente.Telefono)" ></ValidationMessage>
                    </div>
                </div>

                <div>
                    <label>Celular del cliente:</label>
                    <div class ="input-group mb-3">
                        <InputText @bind-Value="cliente.Celular" class="form-control" aria-describedby="CelularCliente"></InputText>
                        <ValidationMessage For="@(() => cliente.Celular)"></ValidationMessage>
                    </div>
                </div>

                <div>
                    <label>RNC del Cliente:</label>
                    <div class="input-group mb-3" >
                        <InputText @bind-Value ="cliente.Rnc" class="form-control" aria-describedby="RncCliente"></InputText>
                        <ValidationMessage For="@(() => cliente.Rnc)"></ValidationMessage>
                    </div>
                </div>
                <div>
                    <label>Email del Cliente:</label>
                    <div class="input-group mb-3">
                        <InputText @bind-Value ="cliente.Email" class="form-control" aria-describedby="EmailCliente"></InputText>
                        <ValidationMessage For="@(() => cliente.Email)"></ValidationMessage>
                    </div>
                </div>
                <div>
                    <label>Direccion del cliente:</label>
                    <div class="input-group mb-3">
                        <InputText @bind-Value="cliente.Direccion" class="form-control" aria-describedby="DireccionCliente"></InputText>
                        <ValidationMessage For="@(() => cliente.Direccion)"></ValidationMessage>
                    </div>
                </div>

                <div class="card-footer d-flex justify-content-center">
                    <div class="btn-group">
                        <button type ="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo <i class="oi oi-file" /></button>
                        <button type ="submit" class="btn btn-outline-success">Guardar <i class ="oi oi-document" /></button>
                        <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar <i class="oi oi-trash" /></button>
                    </div>
                </div>

            </div>
        </div>

    </EditForm>
</body>





@code {
    [Parameter]
    public int ClienteId{get;set;}

    public Clientes cliente {get; set;} = new Clientes();


    protected override void OnInitialized()
    {
        this.cliente.ClienteId = ClienteId;
        this.Buscar();
    }

    public void Nuevo()
    {
        this.cliente = new Clientes();
    }


    public void Guardar(){
        if(!Validar())
        {
            return;
        }
        if(ClienteBLL.Guardar(this.cliente))
        {
            this.Nuevo();
        }
    }

    public void Eliminar()
    {
        Buscar();
        if(ClienteBLL.Eliminar(this.cliente))
        {
            this.Nuevo();
        }
    }


    public void Buscar()
    {
        var clienteEncontrado = ClienteBLL.Buscar(cliente.ClienteId);

        if(clienteEncontrado != null)
        {
            this.cliente = clienteEncontrado;
        }
    }

    public bool Validar()
    {
        return cliente.Nombres != null && cliente.Celular != null && cliente.Email != null && cliente.Rnc != null && cliente.Direccion != null && cliente.Telefono != null;
    }


}
